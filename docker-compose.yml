version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-api
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      # Mount the entire project
      - .:/var/www
      # Explicitly bind mount the local .env file into the container
      - ./.env:/var/www/.env
    depends_on:
      - db
      - db_test
    networks:
      - laravel
    ports:
      # Map PHP-FPM to host (use with nginx if needed)
      - "9000:9000"
    command: >
      sh -c "if ! grep -q '^APP_KEY=' .env || [ -z \"$$(grep '^APP_KEY=' .env | cut -d '=' -f2)\" ]; then php artisan key:generate --force; fi && chown -R www-data:www-data storage bootstrap/cache && chmod -R 775 storage bootstrap/cache && php-fpm"
  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel

  db_test:
    image: mysql:8.0
    container_name: mysql-db-test
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE_TEST}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3308:3306"
    volumes:
      - db_test_data:/var/lib/mysql
    networks:
      - laravel

  nginx:
    image: nginx:alpine
    container_name: nginx-server
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel

networks:
  laravel:

volumes:
  db_data:
  db_test_data: