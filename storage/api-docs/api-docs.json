{
    "openapi": "3.0.0",
    "info": {
        "title": "Property Management API",
        "description": "API for managing property hierarchies including corporations, buildings, properties, tenancy periods, and tenants",
        "contact": {
            "email": "admin@property-api.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/nodes": {
            "post": {
                "tags": [
                    "Nodes"
                ],
                "summary": "Create a new node",
                "description": "Create a new node of type Corporation, Building, Property, Tenancy Period, or Tenant",
                "operationId": "cfafd706d8524f357d2d40d0c7747598",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Test Corporation"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "Corporation",
                                            "Building",
                                            "Property",
                                            "Tenancy Period",
                                            "Tenant"
                                        ],
                                        "example": "Corporation"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "relationship_to_parent": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "nullable": true
                                    },
                                    "zip_code": {
                                        "description": "Required for Building type",
                                        "type": "string",
                                        "example": "12345",
                                        "nullable": true
                                    },
                                    "monthly_rent": {
                                        "description": "Required for Property type",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1500,
                                        "nullable": true
                                    },
                                    "tenancy_active": {
                                        "description": "Required for Tenancy Period type",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "move_in_date": {
                                        "description": "Required for Tenant type",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Node created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Test Corporation"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "Corporation"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "height": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-08-12T10:30:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-08-12T10:30:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Invalid parent-child relationship"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "Tenancy rules violation"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Only one active tenancy period is allowed per property"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Only admins can create nodes."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/nodes/{node}/children": {
            "get": {
                "tags": [
                    "Nodes"
                ],
                "summary": "Get children of a node",
                "description": "Retrieve all direct children of a specific node",
                "operationId": "getNodeChildren",
                "parameters": [
                    {
                        "name": "node",
                        "in": "path",
                        "description": "Node ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Children retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Building A"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "Building"
                                                    },
                                                    "parent_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "height": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "zip_code": {
                                                        "type": "string",
                                                        "example": "12345",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Node]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/nodes/{node}/parent": {
            "put": {
                "tags": [
                    "Nodes"
                ],
                "summary": "Update node parent",
                "description": "Change the parent of an existing node",
                "operationId": "updateNodeParent",
                "parameters": [
                    {
                        "name": "node",
                        "in": "path",
                        "description": "Node ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "parent_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Property Unit 101"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "Corporation",
                                            "Building",
                                            "Property",
                                            "Tenancy Period",
                                            "Tenant"
                                        ],
                                        "example": "Property"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "relationship_to_parent": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "nullable": true
                                    },
                                    "zip_code": {
                                        "description": "Required for Building type",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "monthly_rent": {
                                        "description": "Required for Property type",
                                        "type": "number",
                                        "format": "float",
                                        "example": 1500,
                                        "nullable": true
                                    },
                                    "tenancy_active": {
                                        "description": "Required for Tenancy Period type",
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "move_in_date": {
                                        "description": "Required for Tenant type",
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Parent updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Property Unit 101"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "Property"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "height": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "monthly_rent": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1500
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Invalid parent-child relationship"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "Tenancy rules violation"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Maximum of 4 tenants allowed per tenancy period"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Only admins can update nodes."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Node not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Node]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Nodes",
            "description": "API Endpoints for managing nodes (Corporation, Building, Property, Tenancy Period, Tenant)"
        }
    ]
}